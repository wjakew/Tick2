/*
by Jakub Wawak
kubawawak@gmail.com
all rights reserved
 */
package com.jakubwawak.gui;

import com.jakubwawak.database.Database;
import com.jakubwawak.database.Database_DataGetter;
import com.jakubwawak.tick2.Tick_Address;
import com.jakubwawak.tick2.Tick_HashtagT;
import com.jakubwawak.tick2.Tick_Place;
import com.jakubwawak.tick2.Tick_Tag;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;

/**
 *Main window for opening
 * @author jakubwawak
 */
public class GUI_manageresources_window extends javax.swing.JDialog {

    /**
     * Creates new form GUI_manageresources_window
     */
    Database database;
    DefaultListModel dlm;
    Database_DataGetter ddg;
    
    String combobox_selected;
    int place_selected,tag_selected,hashtag_selected,address_selected = -1;
           
    /**
     * Main constructor
     * @param database
     * @throws SQLException 
     */
    public GUI_manageresources_window(Database database) throws SQLException {
        this.database = database;
        ddg = new Database_DataGetter(this.database);
        initComponents();
        prepare_window();
        
        combobox_selected = "";
        
        setLocationRelativeTo(null);
        load_components();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_loggedas = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list_tags = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        list_places = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        list_hashtagtables = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        list_addresses = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        combobox_choose = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        button_add = new javax.swing.JButton();
        button_remove = new javax.swing.JButton();
        button_showlogs = new javax.swing.JButton();
        button_databasedetails = new javax.swing.JButton();
        label_nick = new javax.swing.JLabel();
        label_selecttarget = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Resource manager");

        label_loggedas.setText("Logged as: ");

        list_tags.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(list_tags);

        jLabel1.setText("Places");

        list_places.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(list_places);

        jLabel2.setText("Tags");

        list_hashtagtables.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(list_hashtagtables);

        jLabel3.setText("Hashtag Tables");

        list_addresses.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(list_addresses);

        jLabel4.setText("Addresses");

        combobox_choose.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Place", "Tag", "Hashtag", "Address" }));
        combobox_choose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobox_chooseActionPerformed(evt);
            }
        });

        jLabel5.setText("On data:");

        button_add.setText("Add");
        button_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_addActionPerformed(evt);
            }
        });

        button_remove.setText("Remove");

        button_showlogs.setText("Show logs");
        button_showlogs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_showlogsActionPerformed(evt);
            }
        });

        button_databasedetails.setText("Database details");
        button_databasedetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_databasedetailsActionPerformed(evt);
            }
        });

        label_nick.setText("nick");

        label_selecttarget.setText("Select target!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(button_showlogs, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(button_databasedetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label_loggedas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label_nick)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combobox_choose, 0, 291, Short.MAX_VALUE))
                    .addComponent(button_add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_remove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(label_selecttarget)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_loggedas)
                    .addComponent(label_nick))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combobox_choose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_remove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label_selecttarget))
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_showlogs)
                    .addComponent(button_databasedetails))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void combobox_chooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobox_chooseActionPerformed
        label_selecttarget.setVisible(false);
        combobox_selected = combobox_choose.getSelectedItem().toString();
        System.out.println(combobox_selected);
    }//GEN-LAST:event_combobox_chooseActionPerformed

    private void button_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_addActionPerformed
        switch (combobox_selected) {
            case "None":
                label_selecttarget.setVisible(true);
                break;
            case "Place":
                try {
                    new GUI_datainput_universal_window(this,true,database,"place",1);
                } catch (SQLException ex) {
                    new message_window_jdialog(this,true,"Error: "+ex.toString());
                }   break;
            case "Tag":
                try {
                    new GUI_datainput_universal_window(this,true,database,"tag",1);
                } catch (SQLException ex) {
                    new message_window_jdialog(this,true,"Error: "+ex.toString());
                }   break;
            case "Hashtag":
            {
                try {
                    new GUI_datainput_universal_window(this,true,database,"hashtag table",1);
                } catch (SQLException ex) {
                    new message_window_jdialog(this,true,"Error: "+ex.toString());
                }
                break;
            }
            case "Address":
            {
                try {
                    new GUI_addaddress_window(this,true,database,1);
                } catch (SQLException ex) {
                    new message_window_jdialog(this,true,"Error: "+ex.toString());
                }
                break;
            }
            default:
                new message_window_jdialog(this,true,"Source is not checked");
                break;
        }
        try {
            load_components();
        } catch (SQLException ex) {
            new message_window_jdialog(this,true,"Error: "+ex.toString());
        }
    }//GEN-LAST:event_button_addActionPerformed

    private void button_showlogsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_showlogsActionPerformed
        new GUI_showlog_window(database);
    }//GEN-LAST:event_button_showlogsActionPerformed

    private void button_databasedetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_databasedetailsActionPerformed
        try {
            new GUI_databasedetails_window(this,true,database);
        } catch (SQLException ex) {
           System.out.println("Error: "+ex.toString());
        }
    }//GEN-LAST:event_button_databasedetailsActionPerformed
    /**
     * Function prepares window
     */
    void prepare_window(){
        label_nick.setText(database.logged.owner_name);
        label_selecttarget.setVisible(false);
    }
    /**
     * Function for loading model to JList
     * @param data
     * @param to_fill 
     */
    void load_model(ArrayList<String> data, JList<String> to_fill){
        DefaultListModel dlm = new DefaultListModel();
        data.forEach(line -> {
            dlm.addElement(line);
        });
       to_fill.setModel(dlm);
    }
    //--------------------------------
    void load_placesList() throws SQLException{
        ArrayList<Tick_Place> data = ddg.get_all_places();
        ArrayList<String> data_toRet = new ArrayList<>();
        if( data == null){
            data_toRet.add("Empty");
        }
        else{
            for(Tick_Place place : data){
                data_toRet.add(place.simple_view());
            }
        }

        load_model(data_toRet,list_places);
    }
    
    void load_addressesList() throws SQLException{
        ArrayList<Tick_Address> data = ddg.get_all_address();
        
        ArrayList<String> data_toRet = new ArrayList<>();
        
        if ( data == null ){
            data_toRet.add("Empty");
        }
        else{
            for(Tick_Address address : data){
                data_toRet.add(address.simple_show());
            }
        }
        load_model(data_toRet,list_addresses);
    }
    
    void load_tagList() throws SQLException{
        ArrayList<Tick_Tag> data = ddg.get_all_tags();
        
        ArrayList<String> data_toRet = new ArrayList<>();
        
        if ( data == null ){
            data_toRet.add("Empty");
        }
        else{
            for(Tick_Tag tag : data){
                data_toRet.add(tag.get_glance());
            }
        }
        load_model(data_toRet,list_tags);
    }
    
    void load_hashtagList() throws SQLException{
        ArrayList<Tick_HashtagT> data = ddg.get_all_htags();
        
        ArrayList<String> data_toRet = new ArrayList<>();
        
        if ( data == null ){
            data_toRet.add("Empty");
        }
        else{
            for(Tick_HashtagT htag : data){
                data_toRet.add(htag.simple_view());
            }
        }
        load_model(data_toRet,list_hashtagtables);
    }
    
    //--------------------------------
    /**
     * Function for loading components
     * @throws SQLException 
     */
    void load_components() throws SQLException{
        prepare_window();
        load_placesList();
        load_addressesList();
        load_tagList();
        load_hashtagList();
    }
    



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_add;
    private javax.swing.JButton button_databasedetails;
    private javax.swing.JButton button_remove;
    private javax.swing.JButton button_showlogs;
    private javax.swing.JComboBox<String> combobox_choose;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel label_loggedas;
    private javax.swing.JLabel label_nick;
    private javax.swing.JLabel label_selecttarget;
    private javax.swing.JList<String> list_addresses;
    private javax.swing.JList<String> list_hashtagtables;
    private javax.swing.JList<String> list_places;
    private javax.swing.JList<String> list_tags;
    // End of variables declaration//GEN-END:variables
}
